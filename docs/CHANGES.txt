History of changes for @NAME@ for IDEA @IDEA-VERSION@

@VERSION@ from 0.10.1
New Features
- Support of visual blockwise mode using Ctrl-v.
- Added the visual commands gp, gP, [p, ]p, [P, ]P, I, and A.

Bug Fixes
- Linewise visual yank now properly inserted linewise during a put.
- Leading/trailing spaces no longer trimmed from registers when displaying with
  :reg command.
- Fix persistence of registers. Whitespace was getting normalized out.
- Fixed visual mode character change.
- No longer update "delete" registers when joining lines or shifting text.
- Undoing a put required two undos instead of one. (Regression from 0.9.7).
- Fixed various visual put issues.
- Fixed cursor movements after yank commands.

0.10.1 from 0.9.7
New Features
- Eliminated the need for a custom keymap. Enabling/Disabling the plugin via
  the tools menu (or Ctrl-Alt-V) properly configures the required key settings.
- Integrate IDEA's "Clear Read-Only Status" dialog when trying to perform a
  modification on a read-only file.

Bug Fixes
- Fixed exiting of visual mode when executing commands such as Comment,
  Reformat, Surround With, and Auto-Indent.
- Pressing Escape while in command mode will now clear highlights created with
  IDEA with commands such as "Highlight Usages in File".
- Ctrl-D, Ctrl-U, zh, zLeft, zl, and zRight now work on read-only files.
- Fixed register names displayed with the :register command.

0.9.7 from 0.9.6
Bug Fixes
- Fixed ze command - was one column off.
- Fixed scrolling with horizontal scroll bar. Regression from 0.9.5.
- Fixed :quit command. Now all forms of the command are recognized.
- Fixed internal error when opening an empty file.

0.9.6 from 0.9.5
Bug Fixes
- You can now insert a real tab using <Ctrl-V><Tab>.
- <Tab> now properly works as a character argument to commands such as f and t.
- Fixed Ctrl-E and Ctrl-Y when caret was at top/bottom of screen.
- Fixed various scrolling and caret movement so caret can appear on first or
  last line of editor.
- Fixed playing back macros if preceded by a count greater than 1.
- Fixed internal error about "Assertion failed: cannot share data context
  between Swing events"

New Features
- Added support for scrolljump option.
- Added support for scrolloff option.
- Added support for sidescroll option.
- Added support for sidescrolloff option.
- Caret now stays in view when scrolling using the mouse wheel or scrollbars.
- Added support for the column scrolling commands zh, zhl, ze, zs, z<Left>, and
  z<Right>.

0.9.5 from 0.9.4
Bug Fixes
- Fixed several internal errors with Idea 5.0
- Updated installation notes for Mac

0.9.4 from 0.9.3
New Features
- Support for Irida (build 3354)

0.9.3 from 0.9.2
Bug Fixes
- Fixed internal error when doing searches and many other actions. Regression
  from 0.9.1.

0.9.2 from 0.9.1
Bug Fixes
- Support for Irida API changes (build 3185)

0.9.1 from 0.9.0
Bug Fixes
- Support for Irida API changes (build 3136)

0.9.0 from 0.8.3
New Features
- Support for Irida (build 3075)

0.8.3 from 0.8.2
Bug Fixes
- After a fresh install it is possible to get a NPE when loading the first
  project. Now fixed.
- Fixed :class and :find. These were also broken by the focus fix in 0.7.2.
- Fixed * and # commands on one letter words.
- Fixed * and # commands on last word of line with trailing punctuation.
- Fixed b and e commands when trying to move to first or last word of file and
  the first or last character of the file was punctuation.
- Fixed NullPointerException appearing in system log when viewing a .form file.
- Fixed extraneous characters getting added to a register during recording.
- Use file type's indent size instead of tab size for indenting text.
- Restore caret if plugin is disabled.
- Fixed ability to delete blank line at end of files.

0.8.2 from 0.8.1
- Fixed typo in plugin.xml for new 'since-build'

0.8.1 from 0.8.0
Bug Fixes
- Updated to show up in the plugin list for Pallada.
- Fixed NullPointerException when using the :qall, :q, or :wq commands.
- Fixed the :edit, :next, :previous, :argument, :first, and :last commands.
  These were broken by the focus fix in 0.7.2.

0.8.0 from 0.7.3
New Features
- Support for Pallada (IDEA 4.5)
- Support for the hlsearch option and the :nohlsearch command. Now when a
  search is done, all matching text is highlighted. The highlight attributes
  are based on the "General|Search result" color setting. (Not for 4.0.x)
- Support for aw, aW, iw, and iW while in visual mode or as arguments to the
  y, gu, gU, g~, c, d, and ! commands.
  
Bug Fixes
- e and E while on the last word of a file didn't work.
- b and B while on the first word of a file didn't work.

0.7.3 from 0.7.2

New Features
- Added support for digraphs. Currently you can use Ctrl-k {char1}{char2} to
  enter a special character. This works while in Insert/Replace mode, as an
  argument to the r, F, T, f, and t commands, or while entering an ex command.
  The :digraphs command has been added to display the currently supported
  digraphs. Certain special cases of the Ctrl-K {char1}{char2} sequence are not
  supported. This supports all two character digraphs as listed in RFC1345.
  This amounts to 1,338 digraphs! Ensure the file encoding can handle the
  characters you enter.
- Added support for the 'digraph' option. If set, digraphs may be entered using
  {char1} [BackSpace] {char2}. This works in Insert/Replace mode or while
  entering an ex command.
- Added support for Ctrl-v {digits}. This works while in Insert/Replace mode,
  as an argument to the r, F, T, f, and t commands, or while entering an ex
  command.
- A new Vim.xml keymap needs to be installed or Ctrl-K needs to be removed
  from all source control menus.

Bug Fixes
- Fixed backspace in ex entry. Deleting the first character was closing the ex
  entry window.

0.7.2 from 0.7.1

Bug Fixes
- Fixed c<motion and d<motion> exception if the motion was invalid.
- Fixed focus problem with : and / and ? commands.
- Fixed word motion on strings such as 1/2/3.
- Fixed <count><word motion> which didn't always match doing <count>
  independent <word motion> commands.
- Fixed <count>cw on strings such as 1/2/3.
- Fixed <count>dw which could delete <count> lines instead.
- The results of the :registers, :marks, and :set commands are now displayed
  properly. This "more" window hadn't been working for a while.
- Fixed caret position when issuing the O command on the first line.
- The confirmation dialog used with the :s//c command now has a default button
  and mnemonics for all buttons.
- A space is now properly allowed between the range and the command in a :
  command such as :1,2 co 4

0.7.1 from 0.7.0

Bug Fixes
- Opening a non-text file resulted in some exceptions. This could happen when
  opening an image with the ImageViewer plugin.
- Better handling of trying to edit a VCS controlled read-only file.
- Properly handle multiple < or > in the :> and :< commands.
- Fixed an exception and assertions when reopening a project.
- Fixed caret position problem when issuing a c<motion> command that changed
  text up to the end of line.
- Using the C command on an empty file caused an error.
- Changing the last word on the last line leaves caret correctly.

0.7.0 from 0.6.5

New Features
- Highlighting lines of code by clicking and/or dragging in the line number area
  now leaves you in visual line mode.
- Undoing all changes in a file now correctly marks the file as unchanged if it
  hasn't been saved in the meantime.
- All the :write commands (:w :wn :wN :wq) save just the one file now. To save
  all files use the :wall command.
- Enhanced the :e command. Support for :e# and :e <filename> have been added.
  :e# selects the previous tab. :e <filename> will search the entire project
  and open the first matching file. Relative paths are supported too. :e with
  no argument will still bring up the File Open dialog.
- Added support for the gP and gp commands.
- Added support for the z+ and z^ commands.
- Added :class command to bring up "Go To Class" dialog. If followed by a
  classname, open the corresponding Java file. Not in VIM.
- Added :symbol command to bring up "Go To Symbol" dialog. Not in VIM.
- Editors use block caret for command mode and a vertical bar for
  insert/replace mode.
- Better support for split view editing.
- Text selection is reflected in all editors of a file.

Bug Fixes
- Under certain conditions, highlighting text left you in multiple layers of
  visual mode. This is now fixed.
- The gv command resulted in too much text being selected in many cases.
- The gv command now properly restores the caret position.
- Fixed exception caused by using the :undo and :redo commands.
- Re-enabled all the :write related commands. Hopefully the deadlock has been
  solved.
- Fixed error referencing unknown class FileCloseAction.
- Fixed several exceptions related to edit fields in dialog boxes.
- Fixed some exceptions related to the undo manager.
- Status was not always show proper mode.
- r<Enter> now works as expected.
- Toggling between insert and replace mode wasn't working properly.
- The caret wasn't always restored correctly after an undo.
- Yanking the last line and then putting it elsewhere sometimes resulted in the
  old and new line not having a newline between them.
- Repeating of o and O commands, including with count, works properly now.
- dw, dW, and d[w now act like d$ if deleting the last word of a line.
- cW now properly behaves like cE.

0.6.5 from 0.6.4

Support for Aurora build #1050 and higher.

0.6.4 from 0.6.3

Support for Aurora build #1035 and higher.

New Features
- Added support for {, }, '{, '}, `{, and `} commands (previous and next
  paragraph).

Bug Fixes
- Fixed caret movement problem introduced in version 0.6.3.
- Fixed issues with visual ranges introduced in version 0.6.3.
- Fixed bug with caret placement when clicking on a blank line.
- Triple clicking text now properly puts the user in Visual Line mode.

Clean-up
- Removed use of newly deprecated methods in Open API.
- Some basic code cleanup.

0.6.3 from 0.6.2

Support for Aurora build #992 and higher.

0.6.2 from 0.6.1

Repackaged to install as a zip directory instead of a jar file. This provides
better support for the new plugins repository.

0.6.1 from 0.6.0

Support for Aurora build #963.

Changed Features
- Removed the VIM icon from the toolbar. This was only used to display status
  messages. Now display status messages in the IDEA status bar.

Bug Unfixes
- Removed, again, support for :w related ex commands

0.6.0 from 0.4.1

Support for Aurora build #939. It may work with slightly older versions too.
This version will not work with IDEA 3.x. For IDEA 3.x you must use @NAME@
versions prior to 0.6.0.

Bug Fixes
- Put back file saving for the :w related ex commands

0.4.1 from 0.4.0

Bug Fixes
- Fixed vim.xml for Windows. This file was getting deleted by Idea on Windows
  due to a mismatch in the case of the name.
- The O command now properly indents the new line.
- Fixed Null Pointer Exception when editing file templates.

Temporary Work-arounds
- Disabled the saving of files when using any of the :w related commands until
  a fix can be found for the dead-lock bug. ZZ and ZQ still save files.

0.4.0 from 0.3.2

New Features
- A VIM tool window has been added. This is used to show the current mode (if
  :set showmode is set) and any messages normally shown on the last line in
  VIM. To make this useful you should do the following:
  - Show the VIM tool window.
  - Make the VIM tool window docked.
  - Turn off auto-hide for the VIM tool window.
  - Shrink the tool window so just the window title is visible.
  - Do not move the VIM tool window to the left or right - leave on the bottom
    or top.
- Various error messages are now displayed in the new status bar.
- Added support for : register
- Added support for / register

New Commands
- Added support for q{register} command - macro recording.
- Added support for @{register} and @@ commands - playback register contents.
- Added support for :@{register}, :@@, and :@: - run register as command or
  repeat last :@ command.

New :set Options
- showmode is now supported.

Bug Fixes
- Hitting escape while entering a search string resulted in a search for the
  previous search string instead of doing nothing.
- The :registers command didn't display trailing newlines in a register
- Fixed focus problem if user hits escape in the find dialog after entering
  the :find command.
- All the search and substitute commands acted strangely if the text contained
  real tab characters. Tabs are now properly handled.
- gd and gD weren't working in read-only files.

0.3.2 from 0.3.1

New Commands
- Added support for {visual}!{filter}, !{motion}{filter}, and !!{filter}.
- Added support for [p, ]p, [P, ]P - put text but do not autoindent. Note -
  This plugin's support for putting text with or without proper indenting is
  reversed from VIM.

New Features
- Entering a count before the v or V command to start Visual mode is now
  supported.
- Repeating Visual commands is now supported.

Bug Fixes
- Now properly handle :0, :1, and :<negative> commands
- More problems with Visual mode - none of the visual change commands left
  you in insert mode after deleting the text and undo wouldn't put the text
  back.
- Fixed the handling of undo/redo with regard to text added to a file while not
  in insert mode. This can happen with the use of the Generate... menu for
  adding constructors, getters, etc. This also can happen when IDEA adds an
  import statement automatically. This also allows you to undo import
  optimizations!
- Doing a cw or cW when the caret is already on the end of a word/WORD now
  correctly deletes only the last character of the word/WORD and not the next
  word too.
- gd and gD now properly save the jump location before moving to the
  declaration.
- z<Enter>, z-, and z. now move the caret to the start of the line.
- Visual mode is now exited after issuing the = or gq command.
- The commands c% and d% where not removing the closing match as expected.
- The d{motion} command now becomes linewise when the motion covers more than
  one line and there is just whitespace before the start and after the end.
- Renamed some source files to avoid problems on case insensitive platforms.
- Entering a count for the . (repeat) command sometimes results in an internal
  error.
- Repeating an R command resulted in the text being inserted instead of
  overwriting old text. This now works properly.
- Issuing a p command when on the last line of a file pasted the line before
  the last line instead of after the last line.

0.3.1 from 0.3.0

New Commands
- Added support for [w, ]w, [b, and ]b. These move the caret forward to start
  of next camel word, forward to end of next camel word, backward to start of
  previous camel word, and backward to end of previous camel word respectively.
  These are NOT in VIM but are very useful when working with mixed case method
  and variable names. Like their normal w, e, b, and ge counterparts, these may
  be used as operators for the c and d commands.
- :qall, :quitall, :wqall, and :xall - closes all editors.
- :wall - same as :write - save all files.
- :xit and :exit - same :wq - save files and close current editor.
- :close and :hide - same as :quit - close current editor.
- :only - Close all editors except the current editor.
- :display - same as :registers - display register contents.
- :undo - same as u - undo last change.
- :redo - same as Ctrl-R - redo last undone change.
- :wnext - save files and move to next editor.
- :wNext and :wprevious - save files and move to previous editor.

Changed Commands
- ZZ, ZQ, :q and :wq will not exit IDEA anymore

Bug Fixes
- Visual mode became unusable without doing a Ctrl-\ Ctrl-n command after each
  visual mode command. This unstable mode also caused undo to work improperly
  resulting in garbled text.
- Ex commands that take a count instead of a range (:next, :Next, etc.) were
  getting the current line number as the count instead of one.
- The == command can now be repeated with the . command.
- Backslashes (\) in the replace text of a :substitute command was not being
  handled correctly in all cases.

0.3.0 from 0.2.0

Redone Commands
- / and ? and all their variants are now supported properly, including offsets.
- n and N are now supported properly
- Ex command ranges now fully support searches
- :substitute command now fully supports all Vim style search and replaces

New Commands
- Added support for :set. Only a small number of options are supported.
- Load .vimrc or _vimrc from user's home directory. Only set commands are
  honored.
- Added support for *, #, g*, and g# - search for word under caret.

Supported Set Options
- gdefault - Indicates of the global flag in on by default for the :substitute
  command.
- ignorecase - The default case sensitivity for searchs and substitutes.
- matchpairs - Specify the character pairs used by the % command
- more - Indicates whether 'more' is used or not for display windows
- scroll - Specifies the number of lines scrolled by the Ctrl-D and Ctrl-U
  commands. Set to zero for half page.
- selection - Specifies how the caret can be moved at the ends of lines in
  Visual mode. It also controls whether the Visual mode selection is inclusive
  or exclusive.
- smartcase - Overrides ignorecase if set and pattern has uppercase characters.
- undolevels - Set to 0 for Vi style undo (1 level). Set to other number to
  specify how many levels of undo are supported per editor.
- visualbell - controls whether the plugin beeps or not.
- wrapscan - Determines is searches wrap around the start or end of the file.

0.2.0 from 0.1.1

New Commands
- Added support for Ctrl-U while in insert mode
- Added support for 0 Ctrl-D to remove all indent in current line
- Added support for F1 while in insert - exit insert and bring up help topics
- Added support for F1 while in normal mode - bring up help topics
- Added support for :promptfind - Brings up Search Dialog
- Added support for :promptrepl - Brings up Search/Replace Dialog
- Added real support for :substitute - search and replace
- Added support for :& - search and replace
- Added support for :~ - search and replace
- Added support for @: - repeat last Ex command
- Added support for :{range}!{filter} [arg] command - filter text
- Added support for :{range}!! command - repeat filter
- Added support for :marks - display marks
- Added support for :registers - display registers

Bug Fixes
- Using the '%' range in Ex commands ignored the first line
- Selecting a register for a command after using Ctrl-O in insert mode sent
  the user back to insert mode before they could enter the command.
- Many commands caused exceptions if the current file is empty.
- Let mouse clicks move caret to end-of-line while in Insert or Replace mode.

Keymappings - Install new plugin.xml or manually add keymapping
- F1

0.1.1 from 0.1.0
- Fixed text of README file (NAME and VERSION weren't properly substituted)
- Fixed issue with pressing Enter when entering an Ex command (no more beep or
  IDEA error message)
- Fixed issue with pressing Backspace in the Ex command entry window when there
  are no characters. The beep is gone and the command entry is properly exited.
